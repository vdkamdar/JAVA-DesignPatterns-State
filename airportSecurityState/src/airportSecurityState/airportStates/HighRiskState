package airportSecurityState.airportStates;

public class HighRiskState implements AirportStateI{
    private AirportSecurityFactors airportSecurityFactors = null;
    private float average_traffic = 0;
    private float average_prohibited_items = 0;

    public HighRiskState(AirportSecurityFactors airportSecurityFactors){
	this.airportSecurityFactors = airportSecurityFactors;	
    }
    
    public void tightenOrLoosenSecurity(){

	average_traffic = airportSecurityFactors.getAverageTraffic();
	average_prohibited_items = airportSecurityFactors.getAverageProhibitedItems();
	System.out.println("The airport is currently in high-risk state!");
	System.out.println(average_traffic);
		System.out.println(average_prohibited_items);
	
	if(((0 <= average_traffic && average_traffic < 4) && (1 <= average_prohibited_items && average_prohibited_items < 2)) || ((4 <= average_traffic && average_traffic < 8) && (0 <= average_prohibited_items && average_prohibited_items < 1)) || (4 <= average_traffic && average_traffic < 8) && (1 <= average_prohibited_items && average_prohibited_items < 2)){
	    airportSecurityFactors.setState(airportSecurityFactors.getModerateRiskState());
	    System.out.println("Change to moderate risk state-3");
	    airportSecurityFactors.setCurrentState("moderate_risk_state");
	}
    }
}